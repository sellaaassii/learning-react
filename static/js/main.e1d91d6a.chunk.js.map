{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","ChooseNumberOfPlayers","ReactDOM","unmountComponentAtNode","document","getElementById","render","ChooseCharacter","startTwoPlayerGame","React","Component","startOnePlayerGame","Board","i","_this","this","squares","renderSquare","Game","_this2","Object","_Users_Selasi_Desktop_react_learning_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_Selasi_Desktop_react_learning_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Selasi_Desktop_react_learning_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","xIsNext","isTwoPlayerGame","undefined","humanPlayerIsX","humanPlayer","computer","status","length","slice","historyAndSquares","getHistoryAndSquares","calculateWinner","winner","setState","concat","minimax","index","_this3","react_center__WEBPACK_IMPORTED_MODULE_9___default","chooseNumberOfPlayers","handleRestartGame","handleClick","isHumanPlayerX","lines","_lines$i","_Users_Selasi_Desktop_react_learning_react_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","every","val","some","board","player","emptySpotsOnBoard","leBoard","emptyIndexes","push","getRemainingSpotsOnBoard","score","bestMove","moves","move","result","bestScore","j"],"mappings":"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","file":"static/js/main.e1d91d6a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Center from 'react-center';\n\n\nfunction Square(props) {\n    return (\n      <button\n      className=\"square\"\n      onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n}\n\nfunction chooseOnePlayerGame() {\n  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  ReactDOM.render(\n    <ChooseCharacter />,\n    document.getElementById('root')\n  );\n}\n\nclass ChooseNumberOfPlayers extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <button className=\"Oneplayer\" onClick={() => chooseOnePlayerGame()}>{\"One player\"}</button>\n        <button className=\"Twoplayer\" onClick={() => startTwoPlayerGame()}>{\"Two player\"}</button>\n      </div>\n    );\n  }\n}\n\nclass ChooseCharacter extends React.Component {\n\n  render () {\n    return (\n      <div>\n        <button className=\"X\" onClick={() => startOnePlayerGame(true)}>{\"X\"}</button>\n        <button className=\"O\" onClick={() => startOnePlayerGame(false)}>{\"O\"}</button>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square\n    value={this.props.squares[i]}\n    onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        xIsNext: true,\n        isTwoPlayerGame: (this.props.humanPlayerIsX === undefined ? true: false),\n        humanPlayer:     (this.props.humanPlayerIsX === undefined ? null : (this.props.humanPlayerIsX ? 'X': 'O')),\n        computer:        (this.props.humanPlayerIsX === undefined ? null : (this.props.humanPlayerIsX ? 'O': 'X')),\n        status:          (this.props.humanPlayerIsX === undefined ? \"Next player: X\" : (this.props.humanPlayerIsX ? 'Your turn': 'Computer\\'s turn')),\n      };\n    }\n\n    getHistoryAndSquares() {\n      const history = this.state.history;\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n\n      return [history, squares];\n    }\n\n    handleClick(i) {\n      var historyAndSquares = this.getHistoryAndSquares();\n      const history = historyAndSquares[0];\n      const squares = historyAndSquares[1];\n\n      if (calculateWinner(squares) || squares[i])\n        return;\n\n      var status = this.state.status;\n\n      //if it is a two player game, check for winner and change status.\n      if (this.state.isTwoPlayerGame) {\n        squares[i] = this.state.xIsNext ? 'X': 'O';\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n        var winner = calculateWinner(squares);\n\n        if (winner) {\n          if (winner === 'T')\n            status = 'It\\'s a tie!';\n          else\n            status = 'Winner: ' + winner;\n        }\n      }\n      else {\n        squares[i] = this.state.humanPlayer;\n      }\n\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n        }]),\n        xIsNext: !this.state.xIsNext,\n        status: status,\n      });\n    }\n\n    componentDidMount() {\n      //if it is one player mode, then start the game with the computer's choice on the board\n      if (this.state.computer === 'X') {\n        var historyAndSquares = this.getHistoryAndSquares();\n        const history = historyAndSquares[0];\n        const squares = historyAndSquares[1];\n\n        var index = minimax(squares, this.state.computer).index;\n        squares[index] = this.state.computer;\n\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n          }]),\n          xIsNext: !this.state.xIsNext,\n          status: 'Your turn',\n        });\n      }\n    }\n\n    componentDidUpdate() {\n      var historyAndSquares = this.getHistoryAndSquares();\n      const history = historyAndSquares[0];\n      const squares = historyAndSquares[1];\n\n      let status = \"Your turn \";\n      //if it is a one player game, then calculate the computer's choice and play\n      if ((this.state.xIsNext && this.state.computer === 'X') ||\n         (!this.state.xIsNext && this.state.computer === 'O')) {\n\n        var index = minimax(squares, this.state.computer).index;\n        squares[index] = this.state.computer;\n\n        var winner = calculateWinner(squares);\n\n        if (winner) {\n          if (winner === 'T')\n            status = 'It\\'s a tie!';\n          else\n            status = (winner === this.state.computer ? \"Computer wins!\" : \" You won!\");\n        }\n\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n          }]),\n          xIsNext: !this.state.xIsNext,\n          status: status,\n        });\n      }\n    }\n\n    handleRestartGame() {\n      if (this.state.isTwoPlayerGame)\n        startTwoPlayerGame();\n      else\n        startOnePlayerGame((this.state.humanPlayer === 'X' ? true: false));\n    }\n\n  render() {\n    var historyAndSquares = this.getHistoryAndSquares();\n    const squares = historyAndSquares[1];\n\n    return (\n      <Center>\n      <button\n      className=\"main\"\n      onClick={() => chooseNumberOfPlayers()}>\n       {\"Main menu\"}\n      </button>\n      <div className=\"game-info\">\n        <div>{this.state.status}</div>\n      </div>\n      <div className=\"reset-button\">\n        <button\n        className=\"reset\"\n        onClick={() => this.handleRestartGame()}>\n         {\"Restart\"}\n        </button>\n      </div>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n          squares={squares}\n          onClick={(i) => this.handleClick(i)}/>\n        </div>\n      </div>\n      </Center>\n    );\n  }\n}\n\nchooseNumberOfPlayers();\n\nfunction startTwoPlayerGame() {\n  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n}\n\nfunction startOnePlayerGame(isHumanPlayerX) {\n  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  ReactDOM.render(\n    <Game humanPlayerIsX={isHumanPlayerX} />,\n    document.getElementById('root')\n  );\n}\n\nfunction chooseNumberOfPlayers() {\n  ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  ReactDOM.render(\n    <ChooseNumberOfPlayers />,\n    document.getElementById('root')\n  );\n}\n\nfunction calculateWinner(squares) {\n  //winning combinations\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n var hasAllNullValues = squares.every(function (val) {\n    return val === null;\n  });\n\n  if(hasAllNullValues)\n    return null;\n\n  var hasSomeNullValue = squares.some(function (val) {\n      return val === null;\n  });\n\n  if(!hasSomeNullValue)\n    return 'T';\n\n  return null;\n}\n\nfunction getRemainingSpotsOnBoard(leBoard) {\n  var emptyIndexes = [];\n\n  for(var i = 0; i < leBoard.length; i++) {\n    if(leBoard[i] === null)\n      emptyIndexes.push(i);\n  }\n  return emptyIndexes;\n}\n\nvar minimax = function(board, player) {\n  //get all the spots on the board that have not been played in\n  var emptySpotsOnBoard = getRemainingSpotsOnBoard(board);\n\n//check to see if there are game ending states of the game(i.e. win, lose, tie)\n  if (calculateWinner(board) === 'O') {\n    return {score: -10};\n  }\n  else if (calculateWinner(board) === 'X') {\n    return {score: 10};\n  }\n  else if (emptySpotsOnBoard.length === 0) {\n    return {score: 0};\n  }\n\n  var moves = [];\n\n  for (var i = 0; i < emptySpotsOnBoard.length; i++) {\n    var move = {};\n    move.index = emptySpotsOnBoard[i];\n\n    board[emptySpotsOnBoard[i]] = player;\n\n    if (player === 'X') { //computer is X\n      var result = minimax(board, 'O');\n      move.score = result.score;\n    }\n    else {\n      var result = minimax(board, 'X');\n      move.score = result.score;\n    }\n\n    board[emptySpotsOnBoard[i]] = null;\n    moves.push(move);\n  }\n\n//when it is the computer's turn, loop over all the moves and choose the one with the maximum score\n  var bestMove;\n  if (player === 'X') {\n    var bestScore = -1000000;\n    for (var j = 0; j < moves.length; j++) {\n      if (moves[j].score > bestScore) {\n        bestScore = moves[j].score;\n        bestMove  = j;\n      }\n    }\n  }\n  else {\n    //when it is the human players turn, loop over all the moves and choose the one with the minimum score\n    var bestScore = 1000000;\n    for (var j = 0; j < moves.length; j++) {\n      if (moves[j].score < bestScore) {\n        bestScore = moves[j].score;\n        bestMove  = j;\n      }\n    }\n  }\n\n  return moves[bestMove];\n}\n"],"sourceRoot":""}